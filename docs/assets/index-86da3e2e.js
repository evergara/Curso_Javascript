(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))i(n);new MutationObserver(n=>{for(const o of n)if(o.type==="childList")for(const s of o.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&i(s)}).observe(document,{childList:!0,subtree:!0});function t(n){const o={};return n.integrity&&(o.integrity=n.integrity),n.referrerPolicy&&(o.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?o.credentials="include":n.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(n){if(n.ep)return;n.ep=!0;const o=t(n);fetch(n.href,o)}})();const p=(e,r)=>{if(!e||e.length===0)throw Error("There are no deck in the Decks");if(!r||r.length===0)throw new Error("Type of special cards is required and must to array of string");const t=F(e),i=x(t,r);return{deck:t,point:i}},y=(e,r)=>{if(!e)throw new Error("playerDeckDiv argument is required");if(!r)throw new Error("pointPlayer argument is required");e.innerText=r},q=(e,r)=>{if(!e)throw new Error("playerDeckDiv argument is required");if(!r)throw new Error("deck argument is required");const t=document.createElement("img");t.classList.add("decks"),t.src="./assets/cartas/"+r+".png",t.alt=r,e.append(t)},w=(e,r,t,i=[],n=[])=>{if(!t)throw new Error("The argument pointMinimum is required");let o=0;do{let{deck:s,point:N}=p(n,i);if(o=o+N,y(e,o),q(r,s),o>=21)break}while(o<t&&t<=21);return o},E=(e,r)=>{if(!e||e.length===0)throw new Error("Type of card is required and must to array of string");if(!r||r.length===0)throw new Error("Type of special cards is required and must to array of string");let t=[];for(let i=2;i<=10;i++)for(const n of e)t.push(i+n);return t=P(t,e,r),v(t)},P=(e,r,t)=>{if(!e||e.length===0)throw new Error("The decks is required and must to array of string");if(!r||r.length===0)throw new Error("Type of card is required and must to array of string");if(!t||t.length===0)throw new Error("Type of special cards is required and must to array of string");for(const i of r)for(const n of t)e.push(n+i);return e},v=e=>{if(!e||e.length===0)throw new Error("The decks is required and must to array of string");return e.sort(()=>Math.random()-.5)},x=(e,r)=>{if(!e)throw new Error("The card from the deck is required");if(!r||r.length===0)throw new Error("Type of special cards is required and must to array of string");const t=e.substring(0,e.length-1);return t==="A"?11:r.includes(t,0)?10:t*1},F=e=>{if(!e||e.length===0)throw Error("No hay cartas en el Decks");return e.pop()},A=(e,r,t,i=[],n=[])=>{let{deck:o,point:s}=p(n,i);return s=e+s,y(r,s),q(t,o),s};let u=[],b=["C","D","H","S"],d=["A","J","Q","K"],a=0,c=0,T=!1,h=!0,m=document.querySelector("#btnOrder"),H=document.querySelector("#btnNew"),l=document.querySelector("#btnFinish");const L=document.querySelector("#player_deck"),g=document.querySelector("#conmputer_deck"),f=document.querySelectorAll("small"),k=document.querySelector("#winner_message");u=E(b,d);m.addEventListener("click",()=>{a=A(a,f[0],L,d,u),T&&(l.disabled=!1,h=!1),a>21&&(console.warn("Lo siento mucho, perdistes"),m.disabled=!0,c=w(f[1],g,a,d,u)),a===21&&(console.warn("21, genial"),m.disabled=!0,c=w(f[1],g,a,d,u)),c>0&&(l.disabled=!0,S(a,c))});H.addEventListener("click",()=>{let e=!0;h||(e=confirm("Seguro que quieres terminar esta partida")),e&&D()});l.addEventListener("click",()=>{l.disabled=!0,m.disabled=!0,h=!0,c=w(f[1],g,a,d,u),l.disabled=!0,S(a,c)});const S=(e,r)=>{let t="";h=!0,t=e===r?"Empate :(":e>21?"Gano la maquina :(":r>21||e===21?"Felicitaciones ganastes :)":"Gano la maquina :(",k.innerText=t},D=()=>{a=0,c=0,m.disabled=!1,l.disabled=!1,L.innerHTML="",g.innerHTML="",f[0].innerText=0,f[1].innerText=0,k.innerText="",l.disabled=!0,T=!0,h=!0,u=[],u=E(b,d)};D();
